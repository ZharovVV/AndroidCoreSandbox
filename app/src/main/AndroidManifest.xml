<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.github.zharovvv.android.core.sandbox">

    <!-- В манифесте прописываются все компоненты приложения.
    Прописываются intent-filters, разрешения, требования по оборудованию.

    Манифест читает система при установке приложения и при его запуске, чтобы понять,
    что представлеяет собой приложение и какие у него есть точки входа.

    Манифест читает Google Store чтобы понять, что представляет собой приложение и какие у него есть
    требования по оборудованию и поддерживаемым версиям ОС.
    -->

    <application
        android:name=".AndroidCoreSandboxApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.AndroidCoreSandbox">
        <!--Под MainActivity понимается активити, у которой intent-filter содержит action.MAIN
        и category.LAUNCHER.

        В AndroidManifest можно добавить несколько main activity. Для каждой активити появится
        иконка в меню приложений. По-умолчанию будет использоваться иконка и имя приложения,
        заданные в атрибутах icon и label элемента application в манифесте. Эти атрибуты можно
        переопределить в элементе activity.
        -->
        <activity
            android:name=".TrueMainActivity"
            android:label="@string/app_name_first_main_activity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".MainActivityDescription"
            android:label="@string/app_name_second_main_activity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".ExplicitCallExampleActivity" />
        <activity
            android:name=".DateActivity"
            android:label="DateActivity">
            <intent-filter>
                <action android:name="com.github.zharovvv.android.core.sandbox.intent.action.showdate" />
                <action android:name="com.github.zharovvv.android.core.sandbox.intent.action.something.else" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name=".DateExtActivity"
            android:label="DateExtActivity">
            <intent-filter>
                <action android:name="com.github.zharovvv.android.core.sandbox.intent.action.showdate" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity android:name=".StartForResultActivity" />
        <activity android:name=".activity.result.api.StartForResultNewActivity" />
        <activity android:name=".call.system.app.CallSystemAppExampleActivity" />
        <activity android:name=".menu.MenuExampleActivity" />
        <activity android:name=".preferences.PreferencesExampleActivity" />
        <activity android:name=".handler.HandlerExampleActivity" />
        <activity android:name=".async.task.AsyncTaskExampleActivity" />
        <activity android:name=".service.ServiceExampleActivity" />
        <activity android:name=".sqlite.SQLiteExampleActivity" />
        <activity android:name=".viewmodel.rxjava.ViewModelRxJavaExampleActivity" />

        <!--
        Организовать работу сервиса и активити в разных процессах можно в одном Application.
        Для этого в манифесте для сервиса надо прописать атрибут: android:process
        The ':' prefix appends the name to your package's standard process name.
        -->
        <service
            android:name=".service.ExampleService"
            android:process=":remote" />
        <service android:name=".service.PendingIntentService" />
        <service android:name=".service.BroadcastReceiverService" />
        <!--Для использования локального биндинга сервис должен работать в одном процессе с активити-->
        <service android:name=".service.BindingService" />
    </application>

</manifest>