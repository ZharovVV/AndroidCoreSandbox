#version 320 es
//Атрибут a_Position с типом vec4 – это вектор из 4 float значений.
//Этот атрибут может хранить в себе трехмерные координаты вершины графического примитива.
//Но кроме трех координат вершины (x,y,z) нам в дальнейшем понадобится еще одно значение,
//поэтому для передачи данных о вершинах используется vec4, а не vec3.
//Данные в этот атрибут мы будем передавать из нашего приложения.

//Т.к. мы собрались рисовать треугольник, то мы будем передавать данные о трех вершинах.
//И для каждой из них будет выполнен этот шейдер, и в a_Position будут данные о текущей вершине.

//если не указать версию GLSL, то по умолчанию будет использоваться 110 (1.10 -> 2.0 OpenGL)
// Изменения для 320 es (для вершинного шейдера):
// attribute -> in
// varying -> out
in vec4 a_Position;
in vec4 a_Color;
//В старых версиях здесь должен быть тип переменной varying.
//Такие переменные используются для обмена данными между вершинным и фрагментным шейдером.
//Переменную varying мы сами заполняем в вершинном шейдере,
//далее система интерполирует эти значения и возвращает результат нам в фрагментный шейдер.
out vec4 v_Color;

// основной метод шейдера, который будет вызван системой.
void main() {
    //Переменная gl_Position – это специальная переменная,
    //в которую мы должны поместить данные о положении вершины.
    //Т.е. эта переменная и есть результат работы вершинного шейдера.
    //Эти данные далее будут использованы графическим процессором для определения положения вершин.
    gl_Position = a_Position;
    v_Color = a_Color;
}