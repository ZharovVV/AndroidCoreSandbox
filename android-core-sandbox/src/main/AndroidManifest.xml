<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android">

    <!-- В манифесте прописываются все компоненты приложения.
    Прописываются intent-filters, разрешения, требования по оборудованию.

    Манифест читает система при установке приложения и при его запуске, чтобы понять,
    что представлеяет собой приложение и какие у него есть точки входа.

    Манифест читает Google Store чтобы понять, что представляет собой приложение и какие у него есть
    требования по оборудованию и поддерживаемым версиям ОС.
    -->

    <uses-permission android:name="android.permission.INTERNET" />
    <!--Обеспечивает приблизительное местоположение устройства с точностью до 1,6 км.-->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <!--Обеспечивает максимально точную оценку местоположения устройства, обычно в пределах
    около 160 футов (50 метров), а иногда с такой же точностью,
    как в пределах 10 футов (нескольких метров) или лучше.-->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <!--Для использования CallLog-->
    <uses-permission android:name="android.permission.READ_CALL_LOG" />

    <application
        android:allowBackup="false"
        android:supportsRtl="true"
        android:theme="@style/Theme.DSTheme">
        <!--Под MainActivity понимается активити, у которой intent-filter содержит action.MAIN
        и category.LAUNCHER.

        В AndroidManifest можно добавить несколько main activity. Для каждой активити появится
        иконка в меню приложений. По-умолчанию будет использоваться иконка и имя приложения,
        заданные в атрибутах icon и label элемента application в манифесте. Эти атрибуты можно
        переопределить в элементе activity.
        -->
        <activity
            android:name=".TrueMainActivity"
            android:exported="true"
            android:label="@string/app_name_first_main_activity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".MainActivityDescription"
            android:exported="true"
            android:label="@string/app_name_second_main_activity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".ExplicitCallExampleActivity" />
        <activity
            android:name=".DateActivity"
            android:exported="true"
            android:label="DateActivity">
            <intent-filter>
                <action android:name="com.github.zharovvv.android.core.sandbox.intent.action.showdate" />
                <action android:name="com.github.zharovvv.android.core.sandbox.intent.action.something.else" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name=".DateExtActivity"
            android:exported="true"
            android:label="DateExtActivity">
            <intent-filter>
                <action android:name="com.github.zharovvv.android.core.sandbox.intent.action.showdate" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity android:name=".StartForResultActivity" />
        <activity android:name=".activity.result.api.StartForResultNewActivity" />
        <activity android:name=".call.system.app.CallSystemAppExampleActivity" />
        <activity android:name=".menu.MenuExampleActivity" />
        <activity android:name=".preferences.PreferencesExampleActivity" />
        <activity android:name=".handler.HandlerExampleActivity" />
        <activity android:name=".async.task.AsyncTaskExampleActivity" />
        <activity android:name=".service.ServiceExampleActivity" />
        <activity android:name=".sqlite.SQLiteExampleActivity" />
        <activity android:name=".viewmodel.rxjava.ViewModelRxJavaExampleActivity" />
        <activity android:name=".viewmodel.livedata.ViewModelLiveDataExampleActivity" />
        <activity android:name=".work.manager.WorkManagerExampleActivity" />
        <activity android:name=".data.binding.DataBindingExampleActivity" />
        <activity android:name=".location.LocationExampleActivity" />
        <activity android:name=".navigation.NavigationExampleActivity" />
        <activity android:name=".custom.view.CustomViewExampleActivity" />

        <!--
        Организовать работу сервиса и активити в разных процессах можно в одном Application.
        Для этого в манифесте для сервиса надо прописать атрибут: android:process
        The ':' prefix appends the name to your package's standard process name.
        -->
        <service
            android:name=".service.ExampleService"
            android:process=":remote" />
        <service android:name=".service.PendingIntentService" />
        <service android:name=".service.BroadcastReceiverService" />
        <!--Для использования локального биндинга сервис должен работать в одном процессе с активити-->
        <service android:name=".service.BindingService" />
        <!--Настойки для работы виджета-->
        <receiver
            android:name=".widget.ExampleAppWidgetProvider"
            android:exported="true"
            android:icon="@drawable/ic_launcher_foreground"
            android:label="@string/widget_name">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>
            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/widget_metadata" />
        </receiver>

        <activity
            android:name=".widget.ConfigureWidgetActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_CONFIGURE" />
            </intent-filter>
        </activity>
        <activity android:name=".pending.intent.PendingIntentExampleActivity" />
        <activity android:name=".alarm.manager.AlarmManagerExampleActivity" />
        <activity android:name=".content.provider.ContentProviderExampleActivity" />
        <activity android:name=".di.example.DaggerExampleActivity" />
        <activity android:name=".window.WindowExampleActivity" />
        <activity android:name=".bundle.BundleDescriptionActivity" />
        <activity android:name=".fragment.FragmentExampleActivity" />
        <activity android:name=".bottomnavigation.BottomNavigationActivity" />

        <receiver android:name=".alarm.manager.AlarmReceiver" />
        <!--
        Тег authorities служит для описания базового пути URI,
        по которому ContentResolver может найти базу данных для взаимодействия.
        Данный тег должен быть уникальным, поэтому рекомендуется использовать имя вашего пакета,
        чтобы не произошло путаницы с другими приложениями.
        -->
        <provider
            android:name=".content.provider.CustomContentProvider"
            android:authorities="com.github.zharovvv.android.core.sandbox.content.provider.custom"
            android:exported="true">

        </provider>
    </application>

</manifest>